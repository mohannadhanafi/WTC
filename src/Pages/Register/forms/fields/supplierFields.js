import { v4 as uuid } from 'uuid';

const fields = [
  {
    id: uuid(),
    tag: 'input',
    name: 'firstName',
    placeholder: 'Name',
    type: 'text',
    rules: [],
    initialValue: undefined,
  },
  {
    id: uuid(),
    tag: 'select',
    name: 'supplierTypeId',
    placeholder: 'Supplier Type',
    type: 'drop-down',
    enableAddItem: false,
    getURL: '/SupplierTypes',
    postURL: '/SupplierTypes',
    rules: [],
    items: ['individual', 'partner'],
    initialValue: undefined,
  },
  {
    id: uuid(),
    tag: 'select',
    name: 'supplierAvailabilityId',
    placeholder: 'Supplier Availability',
    enableAddItem: false,
    items: [],
    getURL: '/supplierAvailability',
    postURL: '/supplierAvailability',
    rules: [],
    initialValue: undefined,
  },
  {
    id: uuid(),
    tag: 'select',
    name: 'countryId',
    placeholder: 'Country',
    type: 'drop-down',
    enableAddItem: false,
    rules: [],
    items: [],
    getURL: '/countries',
    postURL: '/countries',
    initialValue: undefined,
  },
  {
    id: uuid(),
    tag: 'select',
    name: 'cityId',
    placeholder: 'City',
    type: 'drop-down',
    enableAddItem: false,
    rules: [],
    getURL: '/cities',
    postURL: '/cities',
    items: [],
    initialValue: undefined,
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'address',
    placeholder: 'address',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'landLine',
    placeholder: 'Land line',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'fax',
    placeholder: 'Fax',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'email',
    placeholder: 'Email',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'website',
    placeholder: 'Web site',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'vat',
    placeholder: 'VAT NO',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'cr',
    placeholder: 'CR NO',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'select',
    name: 'paymentMethod',
    placeholder: 'Payment methods',
    type: 'drop-down',
    enableAddItem: false,
    rules: [],
    items: ['Bank transfer', 'credit card'],
    initialValue: undefined,
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'username',
    placeholder: 'Username.',
    type: 'text',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'password',
    placeholder: 'Password.',
    type: 'password',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'phoneNumber',
    placeholder: 'Mobile phone.',
    type: 'text',
    rules: [{ required: true }],
    initialValue: '',
  },
  // {
  //   id: uuid(),
  //   tag: 'upload',
  //   name: 'contract',
  //   label: 'Upload file of contract',
  // },
  // {
  //   id: uuid(),
  //   tag: 'upload',
  //   name: 'crPhoto',
  //   label: 'Upload photo of CR / Id',
  // },
  // {
  //   id: uuid(),
  //   tag: 'upload',
  //   name: 'vatPhoto',
  //   label: 'Upload photo of Vat Reg',
  // },
  {
    id: uuid(),
    tag: 'input',
    name: 'carsCount',
    placeholder: 'How many Cars & drivers he will supply?',
    type: 'number',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'tripsCount',
    placeholder: 'How many trips he can do it per day?',
    type: 'number',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'driverInventory',
    placeholder: 'Supplier driver inventory',
    type: 'number',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'carInventory',
    placeholder: 'Supplier Car inventory',
    type: 'number',
    rules: [],
    initialValue: '',
  },
  {
    id: uuid(),
    tag: 'input',
    name: 'notes',
    placeholder: 'Notes',
    type: 'textarea',
    rules: [],
    initialValue: '',
  },
];

const initialValues = fields.reduce((values, cuuField) => {
  let initialValuesObj = values;
  initialValuesObj = {
    ...initialValuesObj,
    [cuuField.name]: cuuField.initialValue,
  };
  return initialValuesObj;
}, {});

export {
  initialValues,
  fields,
};
